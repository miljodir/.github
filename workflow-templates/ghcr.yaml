name: Docker to ghcr

on:
  workflow_dispatch:
  push:
    branches:
      - $default-branch
    paths:
      - "src/**"
      - "!src/**/*.md"

env:
  REGISTRY: ghcr.io
  REPO_NAME: ${{ github.repository }}
  IMAGE_SUFFIX: "/api" # change to suit your image name
  BUILD_CONTEXT: "/api" # change me to fit your image path
  DOCKERFILE_PATH: "default" # change me if needed

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate required output vars
        id: env
        shell: pwsh
        run: |
          $env:tag = (Get-Date -Format dd-MM-yyyy) + "." + ${{ github.run_number }}
          Write-Host "::set-output name=tag::$($env:tag)"

          if ("${{ env.DOCKERFILE_PATH }}" -eq "default")
          {
            $env:dockerfilePath = "${{ env.BUILD_CONTEXT}}/Dockerfile"
          }
          else 
          {
            $env:dockerfilePath = "${{ env.DOCKERFILE_PATH }}"
          }
          Write-Host "::set-output name=DOCKERFILE_PATH::$($env:dockerfilePath)"

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPO_NAME }}${{ env.IMAGE_SUFFIX }}
          tags: |
            type=sha
            type=raw,value=${{ steps.env.outputs.tag }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: ${{ env.BUILD_CONTEXT }}
          dockerfile-path: ${{ steps.env.outputs.DOCKERFILE_PATH }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Container image scan
        if: github.event_name == 'pull_request'
        env:
          # See https://github.com/Azure/container-scan/issues/146
          DOCKLE_HOST: "unix:///var/run/docker.sock"
        id: scan
        uses: Azure/container-scan@v0.1
        with:
          image-name: ${{ env.REGISTRY }}/${{ env.REPO_NAME }}${{ env.IMAGE_SUFFIX }}:${{ steps.env.outputs.tag }}
          severity-threshold: "HIGH"

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v2.5.1

      # Sign the resulting Docker image digest except on PRs.
      # This will write to the public Rekor transparency log
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }}
