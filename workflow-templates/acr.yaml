name: (Dev) Container image build and push, optionally update flux config

on:
  workflow_dispatch:
    inputs:
      no-build:
        description: "Use an existing image instead of building a new"
        required: false
        default: "false"

      no-build-tag:
        description: "Existing image tag to use, e.g. '03-10-2022.210'"
        required: false
        default: "latest"
  push:
    branches:
      - $default-branch
    paths:
      - "src/**"
      - "!src/**/*.md"

jobs:
  dev:
    uses: miljodir/cp-workflow-templates/.github/workflows/acr.yaml@acr/v1
    secrets: inherit
    with:
      # REQUIRED ARGUMENTS - change to fit your needs
      environment: dev # dev, test or production.
      image-name: testteam1/testapp1 # Format your images like this: teamname/appname . Use appname/appname if "team/workload" is not applicaable
      build-path: "./src" # path to your Dockerfile

      # workflow_dispatch Arguments - leave as-is
      no-build: ${{ github.event.inputs.no-build }}
      no-build-tag: ${{ github.event.inputs.no-build-tag }}

      # OPTIONAL ARGUMENTS - build and scan container image
      #dockerfile-path: ./src/Dockerfile # can be set if Dockerfile is not directly under build-path / build context
      #build-arg: "environment=dev"
      #run-image-scan: "false" # defaults to true
      #image-scan-severity: "MEDIUM" # defaults to "HIGH"

      # OPTIONAL ARGUMENTS - Auto update image tag / check status. Remove below args to skip auto-updating
      k8s-repo: "wl-myteam" # Change me
      k8s-deploymentfile: "/fluxcd/dev/deployment.yaml" # auto update image in deployment yaml. Requires the github app permission to bypass branch protection
